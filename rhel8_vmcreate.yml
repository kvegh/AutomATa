---
- name: manage libvirt guests
  user: ansible
  hosts: baremetal
  vars:
    project_name: web
    number_of_hosts: 3
    os_type: rhel
    os_version: 8.0

  tasks:
    - name: create VM {{ os_type }}-{{ project_name }} items by cloning image
      with_sequence: count={{ number_of_hosts }}
      ansible.builtin.command: virt-clone --original=rhel{{ os_version }}-img --name={{ os_type }}-{{ project_name }}{{ item }} --auto-clone

    - name: sysprep VM {{ os_type }}-{{ project_name }} items
      with_sequence: count={{ number_of_hosts }}

      #    - name: transfer/prep SSH public key or keys to be injected into the images. 
      #      copy: 
      #        src: /opt/data/keys/ssh_pubkey
      #        dest: /home/ansible/addkey
      ansible.builtin.shell: export LIBGUESTFS_BACKEND=direct; export LIBGUESTFS_PATH=/home/kvegh/appliance/; virt-sysprep -d {{ os_type }}-{{ project_name }}{{ item
        }} --hostname {{ os_type }}-{{ project_name }}{{ item }} --operations defaults

    - name: sysprep VM plant keys {{ os_type }}-{{ project_name }} items
      with_sequence: count={{ number_of_hosts }}
      ansible.builtin.shell: export LIBGUESTFS_BACKEND=direct; export LIBGUESTFS_PATH=/home/kvegh/appliance/; virt-sysprep -d {{ os_type }}-{{ project_name }}{{ item
        }} --ssh-inject ansible:file:/home/ansible/addkey --selinux-relabel

    - name: set description to {{ os_type }}-{{ project_name }} items
      with_sequence: count={{ number_of_hosts }}
      ansible.builtin.command: virsh desc {{ os_type }}-{{ project_name }}{{ item }} --title {{ os_type }}-{{ project_name }}{{ item }}

    - name: start guest VMs "{{ os_type }}-{{ project_name }} items"
      with_sequence: count={{ number_of_hosts }}
      community.libvirt.virt:
        name: "{{ os_type }}-{{ project_name }}{{ item }}"
        state: running

    - name: allow DHCP/DNS to register
      ansible.builtin.pause:
        minutes: 1
