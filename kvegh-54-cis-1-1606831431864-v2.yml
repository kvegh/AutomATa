---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.
#
# kvegh-54-CIS-1
# https://cloud.redhat.com/insights/remediations/e1a5f8f4-9f10-42e0-9e39-cabe80780395
# Generated by Red Hat Insights on Tue, 01 Dec 2020 14:03:51 GMT
# Created by kvegh@redhat.com

# Set Account Expiration Following Inactivity
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_account_disable_post_pw_expiration,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Set Account Expiration Following Inactivity
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_account_disable_post_pw_expiration: "35"
  tags:
    - CCE-27355-7
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-07-010310
    - NIST-800-171-3.5.6
    - NIST-800-53-AC-2(2)
    - NIST-800-53-AC-2(3)
    - NIST-800-53-IA-4(e)
    - PCI-DSS-Req-8.1.4
    - account_disable_post_pw_expiration
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Set Account Expiration Following Inactivity
      lineinfile:
        create: true
        dest: /etc/default/useradd
        regexp: ^INACTIVE
        line: INACTIVE={{ var_account_disable_post_pw_expiration }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      ansible.builtin.set_fact:
        insights_needs_reboot: true

# Set Password Maximum Age
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_maximum_age_login_defs,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8

- name: Set Password Maximum Age
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_accounts_maximum_age_login_defs: "60"
  tags:
    - CCE-27051-2
    - CJIS-5.6.2.1
    - DISA-STIG-RHEL-07-010250
    - NIST-800-171-3.5.6
    - NIST-800-53-IA-5(1)(d)
    - NIST-800-53-IA-5(f)
    - NIST-800-53-IA-5(g)
    - PCI-DSS-Req-8.2.4
    - accounts_maximum_age_login_defs
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Set Password Maximum Age
      lineinfile:
        create: true
        dest: /etc/login.defs
        regexp: ^#?PASS_MAX_DAYS
        line: PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Set Password Minimum Age
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_minimum_age_login_defs,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Set Password Minimum Age
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_accounts_minimum_age_login_defs: "7"
  tags:
    - CCE-82036-5
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-07-010230
    - NIST-800-171-3.5.8
    - NIST-800-53-IA-5(1)(d)
    - NIST-800-53-IA-5(f)
    - accounts_minimum_age_login_defs
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Set Password Minimum Age
      lineinfile:
        create: true
        dest: /etc/login.defs
        regexp: ^#?PASS_MIN_DAYS
        line: PASS_MIN_DAYS {{ var_accounts_minimum_age_login_defs }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure PAM Enforces Password Requirements - Minimum Digit Characters
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_password_pam_dcredit,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure PAM Enforces Password Requirements - Minimum Digit Characters
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at
  become: true
  vars:
    var_password_pam_dcredit: "-1"
  tags:
    - CCE-27214-6
    - DISA-STIG-RHEL-07-010140
    - NIST-800-53-194
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - PCI-DSS-Req-8.2.3
    - accounts_password_pam_dcredit
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Ensure PAM variable dcredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*dcredit
        line: dcredit = {{ var_password_pam_dcredit }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure PAM Enforces Password Requirements - Minimum Lowercase Characters
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_password_pam_lcredit,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure PAM Enforces Password Requirements - Minimum Lowercase Characters
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at
  become: true
  vars:
    var_password_pam_lcredit: "-1"
  tags:
    - CCE-27345-8
    - DISA-STIG-RHEL-07-010130
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - PCI-DSS-Req-8.2.3
    - accounts_password_pam_lcredit
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Ensure PAM variable lcredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*lcredit
        line: lcredit = {{ var_password_pam_lcredit }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure PAM Enforces Password Requirements - Minimum Different Categories
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_password_pam_minclass,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure PAM Enforces Password Requirements - Minimum Different Categories
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_password_pam_minclass: "3"
  tags:
    - CCE-82045-6
    - DISA-STIG-RHEL-07-010170
    - NIST-800-53-IA-5
    - accounts_password_pam_minclass
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Ensure PAM variable minclass is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minclass
        line: minclass = {{ var_password_pam_minclass }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Set Password Minimum Length
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_password_pam_minlen,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure PAM Enforces Password Requirements - Minimum Length
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_password_pam_minlen: "15"
  tags:
    - CCE-27293-0
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-07-010280
    - NIST-800-53-IA-5(1)(a)
    - PCI-DSS-Req-8.2.3
    - accounts_password_pam_minlen
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Ensure PAM variable minlen is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minlen
        line: minlen = {{ var_password_pam_minlen }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Set Password Strength Minimum Special Characters
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_password_pam_ocredit,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure PAM Enforces Password Requirements - Minimum Special Characters
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at
  become: true
  vars:
    var_password_pam_ocredit: "-1"
  tags:
    - CCE-27360-7
    - DISA-STIG-RHEL-07-010150
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_ocredit
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Ensure PAM variable ocredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*ocredit
        line: ocredit = {{ var_password_pam_ocredit }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure PAM Enforces Password Requirements - Authentication Retry Prompts Permitted Per-Session
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_password_pam_retry,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Ensure PAM Enforces Password Requirements - Authentication Retry Prompts
    Permitted Per-Session
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_password_pam_retry: "3"
  tags:
    - CCE-27160-1
    - CJIS-5.5.3
    - DISA-STIG-RHEL-07-010119
    - NIST-800-53-CM-6(b)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_retry
    - configure_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
  tasks:
    - name: Set Password Retry Prompts Permitted Per-Session - system-auth (change)
      notify: insights_reboot_handler
      ansible.builtin.replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: (^.*\spam_pwquality.so\s.*retry\s*=\s*)(\S+)(.*$)
        replace: \g<1>{{ var_password_pam_retry }}\g<3>

    - name: Set Password Retry Prompts Permitted Per-Session - system-auth (add)
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: ^.*\spam_pwquality.so\s(?!.*retry\s*=\s*).*$
        replace: \g<0> retry={{ var_password_pam_retry }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Set Password Strength Minimum Uppercase Characters
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_password_pam_ucredit,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure PAM Enforces Password Requirements - Minimum Uppercase Characters
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at
  become: true
  vars:
    var_password_pam_ucredit: "-1"
  tags:
    - CCE-27200-5
    - DISA-STIG-RHEL-07-010120
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - PCI-DSS-Req-8.2.3
    - accounts_password_pam_ucredit
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Ensure PAM variable ucredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*ucredit
        line: ucredit = {{ var_password_pam_ucredit }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Limit Password Reuse
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_password_pam_unix_remember,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Limit Password Reuse
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_password_pam_unix_remember: "5"
  tags:
    - CCE-82030-8
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-07-010270
    - NIST-800-171-3.5.8
    - NIST-800-53-IA-5(1)(e)
    - NIST-800-53-IA-5(f)
    - PCI-DSS-Req-8.2.5
    - accounts_password_pam_unix_remember
    - configure_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
  tasks:
    - name: Do not allow users to reuse recent passwords - system-auth (change)
      notify: insights_reboot_handler
      ansible.builtin.replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: ^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$
        replace: \g<1>{{ var_password_pam_unix_remember }}\g<3>

    - name: Do not allow users to reuse recent passwords - system-auth (add)
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: ^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$
        replace: \g<0> remember={{ var_password_pam_unix_remember }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Set Deny For Failed Password Attempts
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_passwords_pam_faillock_deny,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Set Deny For Failed Password Attempts
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_accounts_passwords_pam_faillock_deny: "3"
  tags:
    - CCE-27350-8
    - CJIS-5.5.3
    - DISA-STIG-RHEL-07-010320
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(a)
    - PCI-DSS-Req-8.1.6
    - accounts_passwords_pam_faillock_deny
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Add auth pam_faillock preauth deny before pam_unix.so
      loop:
        - system-auth
        - password-auth
      notify: insights_reboot_handler
      community.general.pamd:
        name: "{{ item }}"
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
        state: before

    - name: Add deny argument to auth pam_faillock preauth
      loop:
        - system-auth
        - password-auth
      notify: insights_reboot_handler
      community.general.pamd:
        name: "{{ item }}"
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
        state: args_present

    - name: Add auth pam_faillock authfail deny after pam_unix.so
      loop:
        - system-auth
        - password-auth
      notify: insights_reboot_handler
      community.general.pamd:
        name: "{{ item }}"
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: "[default=die]"
        new_module_path: pam_faillock.so
        module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
        state: after

    - name: Add deny argument to auth pam_faillock authfail
      loop:
        - system-auth
        - password-auth
      notify: insights_reboot_handler
      community.general.pamd:
        name: "{{ item }}"
        type: auth
        new_type: auth
        control: "[default=die]"
        module_path: pam_faillock.so
        module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
        state: args_present

    - name: Add account pam_faillock before pam_unix.so
      pamd:
        name: "{{ item }}"
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      loop:
        - system-auth
        - password-auth
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Set Lockout Time for Failed Password Attempts
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_passwords_pam_faillock_unlock_time,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Set Lockout Time for Failed Password Attempts
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_accounts_passwords_pam_faillock_unlock_time: "0"
  tags:
    - CCE-26884-7
    - CJIS-5.5.3
    - DISA-STIG-RHEL-07-010320
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(b)
    - PCI-DSS-Req-8.1.7
    - accounts_passwords_pam_faillock_unlock_time
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Add auth pam_faillock preauth unlock_time before pam_unix.so
      loop:
        - system-auth
        - password-auth
      notify: insights_reboot_handler
      community.general.pamd:
        name: "{{ item }}"
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: >-
          preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
        state: before

    - name: Add unlock_time argument to pam_faillock preauth
      loop:
        - system-auth
        - password-auth
      notify: insights_reboot_handler
      community.general.pamd:
        name: "{{ item }}"
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: >-
          preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
        state: args_present

    - name: Add auth pam_faillock authfail unlock_interval after pam_unix.so
      loop:
        - system-auth
        - password-auth
      notify: insights_reboot_handler
      community.general.pamd:
        name: "{{ item }}"
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: "[default=die]"
        new_module_path: pam_faillock.so
        module_arguments: >-
          authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
        state: after

    - name: Add unlock_time argument to auth pam_faillock authfail
      loop:
        - system-auth
        - password-auth
      notify: insights_reboot_handler
      community.general.pamd:
        name: "{{ item }}"
        type: auth
        control: "[default=die]"
        module_path: pam_faillock.so
        module_arguments: >-
          authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
        state: args_present

    - name: Add account pam_faillock before pam_unix.so
      pamd:
        name: "{{ item }}"
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      loop:
        - system-auth
        - password-auth
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Set Interactive Session Timeout
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_tmout,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Set Interactive Session Timeout
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_accounts_tmout: "600"
  tags:
    - CCE-27557-8
    - DISA-STIG-RHEL-07-040160
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-12
    - NIST-800-53-AC-2(5)
    - NIST-800-53-SC-10
    - accounts_tmout
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Set Interactive Session Timeout
      block:
        - name: Deduplicate values from /etc/profile
          notify: insights_reboot_handler
          ansible.builtin.lineinfile:
            path: /etc/profile
            create: false
            regexp: ^\s*TMOUT=
            state: absent

        - name: Check if /etc/profile.d exists
          register: _etc_profile_d_exists
          notify: insights_reboot_handler
          ansible.builtin.stat:
            path: /etc/profile.d

        - name: Check if the parameter TMOUT is present in /etc/profile.d
          register: _etc_profile_d_has_parameter
          when: >-
            _etc_profile_d_exists.stat.isdir is defined and _etc_profile_d_exists.stat.isdir
          notify: insights_reboot_handler
          ansible.builtin.find:
            paths: /etc/profile.d
            recurse: true
            follow: false
            contains: ^\s*TMOUT=

        - name: Remove parameter from files in /etc/profile.d
          with_items: "{{ _etc_profile_d_has_parameter.files }}"
          when: _etc_profile_d_has_parameter.matched
          notify: insights_reboot_handler
          ansible.builtin.lineinfile:
            path: "{{ item.path }}"
            create: false
            regexp: ^\s*TMOUT=
            state: absent

        - name: Insert correct line to /etc/profile
          lineinfile:
            path: /etc/profile
            create: true
            line: TMOUT={{ var_accounts_tmout }}
            state: present
            validate: bash -n %s
          notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure the Default Bash Umask is Set Correctly
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_umask_etc_bashrc,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure the Default Bash Umask is Set Correctly
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_accounts_user_umask: "027"
  tags:
    - CCE-80202-5
    - NIST-800-53-SA-8
    - accounts_umask_etc_bashrc
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - restrict_strategy
    - unknown_severity
  tasks:
    - name: Set user umask in /etc/bashrc
      replace:
        path: /etc/bashrc
        regexp: umask.*
        replace: umask {{ var_accounts_user_umask }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure the Default Umask is Set Correctly in &#x2F;etc&#x2F;profile
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_accounts_umask_etc_profile,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure the Default Umask is Set Correctly in /etc/profile
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_accounts_user_umask: "027"
  tags:
    - CCE-80204-1
    - NIST-800-53-SA-8
    - accounts_umask_etc_profile
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - restrict_strategy
    - unknown_severity
  tasks:
    - name: Set user umask in /etc/profile
      replace:
        path: /etc/profile
        regexp: umask.*
        replace: umask {{ var_accounts_user_umask }}
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Configure Periodic Execution of AIDE
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_aide_periodic_cron_checking,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Configure Periodic Execution of AIDE
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-26952-2
    - CJIS-5.10.1.3
    - DISA-STIG-RHEL-07-020030
    - NIST-800-53-CM-3(5)
    - NIST-800-53-CM-3(d)
    - NIST-800-53-CM-3(e)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - PCI-DSS-Req-11.5
    - aide_periodic_cron_checking
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Ensure AIDE is installed
      with_items:
        - aide
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.package:
        name: "{{ item }}"
        state: present

    - name: Configure Periodic Execution of AIDE
      cron:
        name: run AIDE check
        minute: 5
        hour: 4
        weekday: 0
        user: root
        job: /usr/sbin/aide --check
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Configure auditd admin_space_left Action on Low Disk Space
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_auditd_data_retention_admin_space_left_action,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Configure auditd admin_space_left Action on Low Disk Space
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_auditd_admin_space_left_action: single
  tags:
    - CCE-27370-6
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030340
    - NIST-800-171-3.3.1
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-4
    - NIST-800-53-AU-5(2)
    - NIST-800-53-AU-5(b)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.7
    - auditd_data_retention_admin_space_left_action
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Configure auditd admin_space_left Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: admin_space_left_action = {{ var_auditd_admin_space_left_action }}
        regexp: ^\s*admin_space_left_action\s*=\s*.*$
        state: present
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Configure auditd max_log_file_action Upon Reaching Maximum Log Size
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_auditd_data_retention_max_log_file_action,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Configure auditd max_log_file_action Upon Reaching Maximum Log Size
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at
  become: true
  vars:
    var_auditd_max_log_file_action: rotate
  tags:
    - CCE-27231-0
    - CJIS-5.4.1.1
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-11
    - NIST-800-53-AU-4
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.7
    - auditd_data_retention_max_log_file_action
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Configure auditd max_log_file_action Upon Reaching Maximum Log Size
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: max_log_file_action = {{ var_auditd_max_log_file_action }}
        regexp: ^\s*max_log_file_action\s*=\s*.*$
        state: present
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Configure auditd space_left Action on Low Disk Space
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_auditd_data_retention_space_left_action,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Configure auditd space_left Action on Low Disk Space
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_auditd_space_left_action: email
  tags:
    - CCE-27375-5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030340
    - NIST-800-171-3.3.1
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-4
    - NIST-800-53-AU-5(1)
    - NIST-800-53-AU-5(2)
    - NIST-800-53-AU-5(b)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.7
    - auditd_data_retention_space_left_action
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Configure auditd space_left Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: space_left_action = {{ var_auditd_space_left_action }}
        regexp: ^\s*space_left_action\s*=\s*.*$
        state: present
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - chmod
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_chmod,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Events that Modify the System's Discretionary Access Controls - chmod
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27339-1
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030410
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_chmod
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit chmod tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_chmod
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chmod.matched is defined and find_chmod.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_chmod.matched is defined and find_chmod.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_chmod.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the chmod rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the chmod rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the chmod rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - chown
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_chown,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Events that Modify the System's Discretionary Access Controls - chown
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27364-9
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030370
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_chown
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit chown tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_chown
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chown.matched is defined and find_chown.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_chown.matched is defined and find_chown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_chown.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the chown rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the chown rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the chown rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - fchmod
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fchmod,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    fchmod
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27393-8
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030420
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_fchmod
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit fchmod tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_fchmod
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchmod.matched is defined and find_fchmod.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_fchmod.matched is defined and find_fchmod.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_fchmod.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the fchmod rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the fchmod rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - fchmodat
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fchmodat,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    fchmodat
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27388-8
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030430
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_fchmodat
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit fchmodat tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_fchmodat
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchmodat.matched is defined and find_fchmodat.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_fchmodat.matched is defined and find_fchmodat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_fchmodat.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the fchmodat rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - fchown
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fchown,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    fchown
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27356-5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030380
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_fchown
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit fchown tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_fchown
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchown.matched is defined and find_fchown.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_fchown.matched is defined and find_fchown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_fchown.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the fchown rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the fchown rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the fchown rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - fchownat
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fchownat,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    fchownat
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27387-0
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030400
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_fchownat
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit fchownat tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_fchownat
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchownat.matched is defined and find_fchownat.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_fchownat.matched is defined and find_fchownat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_fchownat.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the fchownat rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the fchownat rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - fremovexattr
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fremovexattr,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    fremovexattr
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27353-2
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030480
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_fremovexattr
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit fremovexattr tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_fremovexattr
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - >-
          find_fremovexattr.matched is defined and find_fremovexattr.matched ==
          0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_fremovexattr.matched is defined and find_fremovexattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_fremovexattr.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: >-
        Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on
        x86
      lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F
          auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F
          auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - fsetxattr
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_fsetxattr,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    fsetxattr
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27389-6
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030450
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_fsetxattr
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit fsetxattr tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_fsetxattr
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_fsetxattr.matched is defined and find_fsetxattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_fsetxattr.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: >-
        Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on
        x86
      lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - lchown
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lchown,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    lchown
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27083-5
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030390
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_lchown
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit lchown tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_lchown
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_lchown.matched is defined and find_lchown.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_lchown.matched is defined and find_lchown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_lchown.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the lchown rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the lchown rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the lchown rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - lremovexattr
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lremovexattr,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    lremovexattr
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27410-0
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030490
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_lremovexattr
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit lremovexattr tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_lremovexattr
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - >-
          find_lremovexattr.matched is defined and find_lremovexattr.matched ==
          0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_lremovexattr.matched is defined and find_lremovexattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_lremovexattr.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: >-
        Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on
        x86
      lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F
          auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F
          auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - lsetxattr
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_lsetxattr,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    lsetxattr
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27280-7
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030460
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_lsetxattr
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit lsetxattr tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_lsetxattr
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_lsetxattr.matched is defined and find_lsetxattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_lsetxattr.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: >-
        Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on
        x86
      lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - removexattr
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_removexattr,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    removexattr
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27367-2
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030470
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_removexattr
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit removexattr tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_removexattr
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_removexattr.matched is defined and find_removexattr.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_removexattr.matched is defined and find_removexattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_removexattr.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the removexattr rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the removexattr rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: >-
        Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on
        x86
      lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify the System&#39;s Discretionary Access Controls - setxattr
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_dac_modification_setxattr,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Record Events that Modify the System's Discretionary Access Controls -
    setxattr
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27213-8
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030440
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.5.5
    - audit_rules_dac_modification_setxattr
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit setxattr tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_setxattr
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_setxattr.matched is defined and find_setxattr.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_setxattr.matched is defined and find_setxattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_setxattr.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the setxattr rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the setxattr rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true

    - name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure auditd Collects File Deletion Events by User - rename
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_file_deletion_events_rename,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure auditd Collects File Deletion Events by User - rename
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80995-4
    - DISA-STIG-RHEL-07-030880
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
    - PCI-DSS-Req-10.2.7
    - audit_rules_file_deletion_events_rename
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit rename tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_rename
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_rename.matched is defined and find_rename.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_rename.matched is defined and find_rename.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_rename.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the rename rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
        create: true

    - name: Inserts/replaces the rename rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
        create: true

    - name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the rename rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F
          key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure auditd Collects File Deletion Events by User - renameat
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_file_deletion_events_renameat,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure auditd Collects File Deletion Events by User - renameat
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80413-8
    - DISA-STIG-RHEL-07-030890
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
    - PCI-DSS-Req-10.2.7
    - audit_rules_file_deletion_events_renameat
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit renameat tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_renameat
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_renameat.matched is defined and find_renameat.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_renameat.matched is defined and find_renameat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_renameat.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the renameat rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
        create: true

    - name: Inserts/replaces the renameat rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
        create: true

    - name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the renameat rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F
          key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure auditd Collects File Deletion Events by User - rmdir
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_file_deletion_events_rmdir,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure auditd Collects File Deletion Events by User - rmdir
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80412-0
    - DISA-STIG-RHEL-07-030900
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
    - PCI-DSS-Req-10.2.7
    - audit_rules_file_deletion_events_rmdir
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit rmdir tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_rmdir
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_rmdir.matched is defined and find_rmdir.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_rmdir.matched is defined and find_rmdir.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_rmdir.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the rmdir rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
        create: true

    - name: Inserts/replaces the rmdir rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
        create: true

    - name: Inserts/replaces the rmdir rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the rmdir rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F
          key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure auditd Collects File Deletion Events by User - unlinkat
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_file_deletion_events_unlink,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure auditd Collects File Deletion Events by User - unlink
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80996-2
    - DISA-STIG-RHEL-07-030910
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
    - PCI-DSS-Req-10.2.7
    - audit_rules_file_deletion_events_unlink
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit unlink tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_unlink
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_unlink.matched is defined and find_unlink.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_unlink.matched is defined and find_unlink.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_unlink.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the unlink rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
        create: true

    - name: Inserts/replaces the unlink rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
        create: true

    - name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the unlink rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F
          key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure auditd Collects File Deletion Events by User - unlinkat
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_file_deletion_events_unlinkat,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure auditd Collects File Deletion Events by User - unlinkat
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80662-0
    - DISA-STIG-RHEL-07-030920
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
    - PCI-DSS-Req-10.2.7
    - audit_rules_file_deletion_events_unlinkat
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit unlinkat tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_unlinkat
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_unlinkat.matched is defined and find_unlinkat.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_unlinkat.matched is defined and find_unlinkat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_unlinkat.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the unlinkat rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
        create: true

    - name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: >-
          -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
        create: true

    - name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: >-
          -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
      lineinfile:
        line: >-
          -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F
          key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Attempts to Alter Logon and Logout Events - faillock
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_login_events_faillock,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Attempts to Alter Logon and Logout Events - faillock
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80383-3
    - DISA-STIG-RHEL-07-030610
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AC-6(9)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.3
    - audit_rules_login_events_faillock
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit faillock tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      register: find_faillock
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: "*.rules"

    - name: >-
        If existing user/group modification ruleset not found, use
        /etc/audit/rules.d/logins.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_faillock.matched is defined and find_faillock.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_faillock.matched is defined and find_faillock.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_faillock.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the faillock rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: -w /var/run/faillock -p wa -k logins
        create: true

    - name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/run/faillock -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Attempts to Alter Logon and Logout Events - lastlog
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_login_events_lastlog,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Attempts to Alter Logon and Logout Events - lastlog
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80384-1
    - DISA-STIG-RHEL-07-030620
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AC-6(9)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.3
    - audit_rules_login_events_lastlog
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit lastlog tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      register: find_lastlog
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: "*.rules"

    - name: >-
        If existing user/group modification ruleset not found, use
        /etc/audit/rules.d/logins.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_lastlog.matched is defined and find_lastlog.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_lastlog.matched is defined and find_lastlog.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_lastlog.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the lastlog rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: -w /var/log/lastlog -p wa -k logins
        create: true

    - name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/log/lastlog -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Ensure auditd Collects Information on the Use of Privileged Commands - gpasswd
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_privileged_commands,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Ensure auditd Collects Information on the Use of Privileged Commands
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27437-3
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030360
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AC-6(9)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(4)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-6(9)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.2
    - audit_rules_privileged_commands
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Search for privileged commands
      args:
        warn: false
        executable: /bin/bash
      check_mode: false
      register: find_result
      changed_when: false
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.shell: find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null

    - name: Search /etc/audit/rules.d for audit rule entries
      with_items:
        - "{{ find_result.stdout_lines }}"
      register: files_result
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path={{ item }} .*$
        patterns: "*.rules"

    - name: Overwrites the rule in rules.d
      with_subelements:
        - "{{ files_result.results }}"
        - files
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ item.1.path }}"
        line: >-
          -a always,exit -F path={{ item.0.item }} -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
        create: false
        regexp: ^.*path={{ item.0.item }} .*$

    - name: Adds the rule in rules.d
      with_items:
        - "{{ files_result.results }}"
      when:
        - files_result.results is defined and item.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: /etc/audit/rules.d/privileged.rules
        line: >-
          -a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=unset -F key=special-config-changes
        create: true

    - name: Inserts/replaces the rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: >-
          -a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F
          auid!=unset -F key=special-config-changes
        create: true
        regexp: ^.*path={{ item.item }} .*$
      with_items:
        - "{{ files_result.results }}"
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Unsuccessful Access Attempts to Files - creat
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_creat,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Unsuccessful Access Attempts to Files - creat
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80385-8
    - DISA-STIG-RHEL-07-030500
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.1
    - PCI-DSS-Req-10.2.4
    - audit_rules_unsuccessful_file_modification_creat
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:
    - name: Add unsuccessful file operations audit rules
      blockinfile:
        path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
        create: true
        block: >-
          ## This content is a section of an Audit config snapshot recommended
          for RHEL8 sytems that target OSPP compliance.

          ## The following content has been retreived on 2019-03-11 from:
          https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules


          ## The purpose of these rules is to meet the requirements for
          Operating

          ## System Protection Profile (OSPP)v4.2. These rules depends on having

          ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules
          installed.


          ## Unsuccessful file creation (open with O_CREAT)

          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F
          exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F
          exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F
          exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F
          exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F
          auid!=unset -F key=unsuccesful-create

          -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F
          auid!=unset -F key=unsuccesful-create


          ## Unsuccessful file modifications (open for write or truncate)

          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F
          exit=-EACCES -F auid>=1000 -F auid!=unset -F
          key=unsuccesful-modification

          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F
          exit=-EACCES -F auid>=1000 -F auid!=unset -F
          key=unsuccesful-modification

          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F
          exit=-EPERM -F auid>=1000 -F auid!=unset -F
          key=unsuccesful-modification

          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F
          exit=-EPERM -F auid>=1000 -F auid!=unset -F
          key=unsuccesful-modification

          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F
          auid>=1000 -F auid!=unset -F key=unsuccesful-modification


          ## Unsuccessful file access (any other opens) This has to go last.

          -a always,exit -F arch=b32 -S
          open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES
          -F auid>=1000 -F auid!=unset -F key=unsuccesful-access

          -a always,exit -F arch=b64 -S
          open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES
          -F auid>=1000 -F auid!=unset -F key=unsuccesful-access

          -a always,exit -F arch=b32 -S
          open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM
          -F auid>=1000 -F auid!=unset -F key=unsuccesful-access

          -a always,exit -F arch=b64 -S
          open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM
          -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Unsuccessful Access Attempts to Files - ftruncate
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_ftruncate,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Unsuccessful Access Attempts to Files - ftruncate
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80390-8
    - DISA-STIG-RHEL-07-030550
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.1
    - PCI-DSS-Req-10.2.4
    - audit_rules_unsuccessful_file_modification_ftruncate
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit ftruncate tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_ftruncate
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_ftruncate.matched is defined and find_ftruncate.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_ftruncate.matched is defined and find_ftruncate.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_ftruncate.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the ftruncate rule in rules.d when on x86
      with_items:
        - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: true

    - name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
      with_items:
        - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: true

    - name: >-
        Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on
        x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - >-
          -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000
          -F auid!=unset -F key=access
        - >-
          -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000
          -F auid!=unset -F key=access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - >-
          -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000
          -F auid!=unset -F key=access
        - >-
          -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000
          -F auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Unsuccessful Access Attempts to Files - open_by_handle_at
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_open,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Unsuccessful Access Attempts to Files - open
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80386-6
    - DISA-STIG-RHEL-07-030510
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.1
    - PCI-DSS-Req-10.2.4
    - audit_rules_unsuccessful_file_modification_open
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit open tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_open
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_open.matched is defined and find_open.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_open.matched is defined and find_open.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_open.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the open rule in rules.d when on x86
      with_items:
        - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: true

    - name: Inserts/replaces the open rule in rules.d when on x86_64
      with_items:
        - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: true

    - name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
      with_items:
        - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the open rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - >-
          -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=access
        - >-
          -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F
          auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Unsuccessful Access Attempts to Files - openat
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_openat,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Unsuccessful Access Attempts to Files - openat
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80387-4
    - DISA-STIG-RHEL-07-030520
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.1
    - PCI-DSS-Req-10.2.4
    - audit_rules_unsuccessful_file_modification_openat
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit openat tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_openat
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_openat.matched is defined and find_openat.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_openat.matched is defined and find_openat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_openat.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the openat rule in rules.d when on x86
      with_items:
        - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: true

    - name: Inserts/replaces the openat rule in rules.d when on x86_64
      with_items:
        - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: true

    - name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
      with_items:
        - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the openat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - >-
          -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=access
        - >-
          -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F
          auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Unsuccessful Access Attempts to Files - open_by_handle_at
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_open_by_handle_at,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Unsuccessful Access Attempts to Files - open_by_handle_at
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80388-2
    - DISA-STIG-RHEL-07-030530
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.1
    - PCI-DSS-Req-10.2.4
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit open_by_handle_at tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_open_by_handle_at
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - >-
          find_open_by_handle_at.matched is defined and
          find_open_by_handle_at.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - >-
            {{ find_open_by_handle_at.files | map(attribute='path') | list |
            first }}
      when:
        - >-
          find_open_by_handle_at.matched is defined and
          find_open_by_handle_at.matched > 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: true
      with_items:
        - >-
          -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F
          auid>=1000 -F auid!=unset -F key=access
        - >-
          -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F
          auid>=1000 -F auid!=unset -F key=access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: true
      with_items:
        - >-
          -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F
          auid>=1000 -F auid!=unset -F key=access
        - >-
          -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F
          auid>=1000 -F auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: >-
        Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules
        when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - >-
          -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F
          auid>=1000 -F auid!=unset -F key=access
        - >-
          -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F
          auid>=1000 -F auid!=unset -F key=access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: >-
        Inserts/replaces the open_by_handle_at rule in audit.rules when on
        x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - >-
          -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F
          auid>=1000 -F auid!=unset -F key=access
        - >-
          -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F
          auid>=1000 -F auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Unsuccessful Access Attempts to Files - truncate
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_truncate,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Unsuccessful Access Attempts to Files - truncate
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80389-0
    - DISA-STIG-RHEL-07-030540
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.1
    - PCI-DSS-Req-10.2.4
    - audit_rules_unsuccessful_file_modification_truncate
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit truncate tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other DAC audit rules
      register: find_truncate
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: "*.rules"

    - name: >-
        If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_truncate.matched is defined and find_truncate.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_truncate.matched is defined and find_truncate.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_truncate.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the truncate rule in rules.d when on x86
      with_items:
        - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: true

    - name: Inserts/replaces the truncate rule in rules.d when on x86_64
      with_items:
        - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: true

    - name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
      with_items:
        - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: true

    - name: Inserts/replaces the truncate rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - >-
          -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000
          -F auid!=unset -F key=access
        - >-
          -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F
          auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify User&#x2F;Group Information - &#x2F;etc&#x2F;group
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification_group,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Events that Modify User/Group Information - /etc/group
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80433-6
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030871
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-6(9)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.5
    - audit_rules_usergroup_modification_group
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit group tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      register: find_group
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k audit_rules_usergroup_modification$
        patterns: "*.rules"

    - name: >-
        If existing user/group modification ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_group.matched is defined and find_group.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_group.matched is defined and find_group.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_group.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the group rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: -w /etc/group -p wa -k audit_rules_usergroup_modification
        create: true

    - name: Inserts/replaces the group rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/group -p wa -k audit_rules_usergroup_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify User&#x2F;Group Information - &#x2F;etc&#x2F;gshadow
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification_gshadow,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Events that Modify User/Group Information - /etc/gshadow
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80432-8
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030872
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-6(9)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.5
    - audit_rules_usergroup_modification_gshadow
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit gshadow tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      register: find_gshadow
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k audit_rules_usergroup_modification$
        patterns: "*.rules"

    - name: >-
        If existing user/group modification ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_gshadow.matched is defined and find_gshadow.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_open_by_handle_at.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the gshadow rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
        create: true

    - name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify User&#x2F;Group Information - &#x2F;etc&#x2F;security&#x2F;opasswd
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification_opasswd,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Events that Modify User/Group Information - /etc/security/opasswd
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80430-2
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030874
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-6(9)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.5
    - audit_rules_usergroup_modification_opasswd
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit opasswd tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      register: find_opasswd
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k audit_rules_usergroup_modification$
        patterns: "*.rules"

    - name: >-
        If existing user/group modification ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_opasswd.matched is defined and find_opasswd.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_opasswd.matched is defined and find_opasswd.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_opasswd.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the opasswd rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
        create: true

    - name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify User&#x2F;Group Information - &#x2F;etc&#x2F;passwd
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification_passwd,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Events that Modify User/Group Information - /etc/passwd
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80435-1
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030870
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-6(9)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.5
    - audit_rules_usergroup_modification_passwd
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit passwd tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      register: find_passwd
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k audit_rules_usergroup_modification$
        patterns: "*.rules"

    - name: >-
        If existing user/group modification ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_passwd.matched is defined and find_passwd.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_passwd.matched is defined and find_passwd.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_passwd.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the passwd rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
        create: true

    - name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Record Events that Modify User&#x2F;Group Information - &#x2F;etc&#x2F;shadow
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_audit_rules_usergroup_modification_shadow,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Record Events that Modify User/Group Information - /etc/shadow
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80431-0
    - CJIS-5.4.1.1
    - DISA-STIG-RHEL-07-030873
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-6(9)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.2.5
    - audit_rules_usergroup_modification_shadow
    - low_complexity
    - low_disruption
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: Set architecture for audit shadow tasks
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      register: find_shadow
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k audit_rules_usergroup_modification$
        patterns: "*.rules"

    - name: >-
        If existing user/group modification ruleset not found, use
        /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_shadow.matched is defined and find_shadow.matched == 0
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Use matched file as the recipient for the rule
      when:
        - find_shadow.matched is defined and find_shadow.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        all_files:
          - "{{ find_shadow.files | map(attribute='path') | list | first }}"

    - name: Inserts/replaces the shadow rule in rules.d when on x86
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.lineinfile:
        path: "{{ all_files[0] }}"
        line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
        create: true

    - name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable core dump backtraces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_coredump_disable_backtraces,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable core dump backtraces
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - coredump_disable_backtraces
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - restrict_strategy
    - unknown_severity
  tasks:
    - name: Disable core dump backtraces
      block:
        - name: Deduplicate values from /etc/systemd/coredump.conf
          notify: insights_reboot_handler
          ansible.builtin.lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*ProcessSizeMax\s*=\s*
            state: absent

        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            line: ProcessSizeMax=0
            state: present
          notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable storing core dump
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_coredump_disable_storage,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable storing core dump
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - coredump_disable_storage
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - restrict_strategy
    - unknown_severity
  tasks:
    - name: Disable storing core dump
      block:
        - name: Deduplicate values from /etc/systemd/coredump.conf
          notify: insights_reboot_handler
          ansible.builtin.lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*Storage\s*=\s*
            state: absent

        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            line: Storage=none
            state: present
          notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Core Dumps for All Users
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_disable_users_coredumps,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Core Dumps for All Users
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80169-6
    - disable_users_coredumps
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - restrict_strategy
    - unknown_severity
  tasks:
    - name: disable core dumps with limits
      lineinfile:
        dest: /etc/security/limits.conf
        regexp: ^[^#].*core
        line: "*        hard       core      0"
        create: true
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Verify Permissions on cron.daily
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_file_permissions_cron_d,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Verify Permissions on cron.d
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82276-7
    - NIST-800-53-AC-17
    - NIST-800-53-AC-6
    - configure_strategy
    - file_permissions_cron_d
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  tasks:
    - name: Test for existence /etc/cron.d/
      register: file_exists
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.stat:
        path: /etc/cron.d/

    - name: Ensure permission 0700 on /etc/cron.d/
      file:
        path: /etc/cron.d/
        mode: "0700"
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Verify Permissions on cron.daily
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_file_permissions_cron_daily,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Verify Permissions on cron.daily
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82239-5
    - NIST-800-53-AC-17
    - NIST-800-53-AC-6
    - configure_strategy
    - file_permissions_cron_daily
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  tasks:
    - name: Test for existence /etc/cron.daily/
      register: file_exists
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.stat:
        path: /etc/cron.daily/

    - name: Ensure permission 0700 on /etc/cron.daily/
      file:
        path: /etc/cron.daily/
        mode: "0700"
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Verify Permissions on cron.hourly
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_file_permissions_cron_hourly,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Verify Permissions on cron.hourly
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82229-6
    - NIST-800-53-AC-17
    - NIST-800-53-AC-6
    - configure_strategy
    - file_permissions_cron_hourly
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  tasks:
    - name: Test for existence /etc/cron.hourly/
      register: file_exists
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.stat:
        path: /etc/cron.hourly/

    - name: Ensure permission 0700 on /etc/cron.hourly/
      file:
        path: /etc/cron.hourly/
        mode: "0700"
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Verify Permissions on cron.monthly
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_file_permissions_cron_monthly,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Verify Permissions on cron.monthly
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82262-7
    - NIST-800-53-AC-17
    - NIST-800-53-AC-6
    - configure_strategy
    - file_permissions_cron_monthly
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  tasks:
    - name: Test for existence /etc/cron.monthly/
      register: file_exists
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.stat:
        path: /etc/cron.monthly/

    - name: Ensure permission 0700 on /etc/cron.monthly/
      file:
        path: /etc/cron.monthly/
        mode: "0700"
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Verify Permissions on crontab
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_file_permissions_crontab,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Verify Permissions on crontab
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82205-6
    - NIST-800-53-AC-17
    - NIST-800-53-AC-6
    - configure_strategy
    - file_permissions_crontab
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  tasks:
    - name: Test for existence /etc/crontab
      register: file_exists
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.stat:
        path: /etc/crontab

    - name: Ensure permission 0600 on /etc/crontab
      file:
        path: /etc/crontab
        mode: "0600"
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Verify Permissions on cron.weekly
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_file_permissions_cron_weekly,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Verify Permissions on cron.weekly
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82250-2
    - NIST-800-53-AC-17
    - NIST-800-53-AC-6
    - configure_strategy
    - file_permissions_cron_weekly
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  tasks:
    - name: Test for existence /etc/cron.weekly/
      register: file_exists
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.stat:
        path: /etc/cron.weekly/

    - name: Ensure permission 0700 on /etc/cron.weekly/
      file:
        path: /etc/cron.weekly/
        mode: "0700"
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Verify &#x2F;boot&#x2F;grub2&#x2F;grub.cfg Permissions
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_file_permissions_grub2_cfg,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Verify /boot/grub2/grub.cfg Permissions
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82039-9
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
    - configure_strategy
    - file_permissions_grub2_cfg
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  tasks:
    - name: Test for existence /boot/grub2/grub.cfg
      register: file_exists
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.stat:
        path: /boot/grub2/grub.cfg

    - name: Ensure permission 0600 on /boot/grub2/grub.cfg
      file:
        path: /boot/grub2/grub.cfg
        mode: "0600"
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Enable Auditing for Processes Which Start Prior to the Audit Daemon
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_grub2_audit_argument,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Enable Auditing for Processes Which Start Prior to the Audit Daemon
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27212-0
    - CJIS-5.4.1.1
    - NIST-800-171-3.3.1
    - NIST-800-53-AC-17(1)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-10
    - NIST-800-53-AU-12
    - NIST-800-53-AU-12(1)
    - NIST-800-53-AU-14(1)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-IR-5
    - PCI-DSS-Req-10.3
    - grub2_audit_argument
    - low_disruption
    - medium_complexity
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: check audit argument exists
      failed_when: false
      register: argcheck
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.command: grep 'GRUB_CMDLINE_LINUX.*audit=' /etc/default/grub

    - name: replace existing audit argument
      when:
        - argcheck.rc == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: audit=.
        replace: audit=1

    - name: add audit argument
      when:
        - argcheck.rc != 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: (GRUB_CMDLINE_LINUX=.*)"
        replace: \1 audit=1"

    - name: update bootloader menu
      command: /sbin/grubby --update-kernel=ALL --args="audit=1"
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Extend Audit Backlog Limit for the Audit Daemon
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_grub2_audit_backlog_limit_argument,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Extend Audit Backlog Limit for the Audit Daemon
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82156-1
    - grub2_audit_backlog_limit_argument
    - low_disruption
    - medium_complexity
    - medium_severity
    - reboot_required
    - restrict_strategy
  tasks:
    - name: check audit_backlog_limit argument exists
      failed_when: false
      register: argcheck
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.command: grep 'GRUB_CMDLINE_LINUX.*audit_backlog_limit=' /etc/default/grub

    - name: replace existing audit_backlog_limit argument
      when:
        - argcheck.rc == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: audit_backlog_limit=.
        replace: audit_backlog_limit=8192

    - name: add audit_backlog_limit argument
      when:
        - argcheck.rc != 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: (GRUB_CMDLINE_LINUX=.*)"
        replace: \1 audit_backlog_limit=8192"

    - name: update bootloader menu
      command: /sbin/grubby --update-kernel=ALL --args="audit_backlog_limit=8192"
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Mounting of cramfs
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_cramfs_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Mounting of cramfs
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80137-3
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_cramfs_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  tasks:
    - name: Ensure kernel module 'cramfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/cramfs.conf
        regexp: cramfs
        line: install cramfs /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable DCCP Support
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_dccp_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable DCCP Support
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82024-1
    - CJIS-5.10.1
    - DISA-STIG-RHEL-07-020101
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_dccp_disabled
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
  tasks:
    - name: Ensure kernel module 'dccp' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/dccp.conf
        regexp: dccp
        line: install dccp /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Mounting of freevxfs
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_freevxfs_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Mounting of freevxfs
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at
  become: true
  tags:
    - CCE-80138-1
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_freevxfs_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  tasks:
    - name: Ensure kernel module 'freevxfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/freevxfs.conf
        regexp: freevxfs
        line: install freevxfs /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Mounting of hfs
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_hfs_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Mounting of hfs
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at
  become: true
  tags:
    - CCE-80140-7
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_hfs_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  tasks:
    - name: Ensure kernel module 'hfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/hfs.conf
        regexp: hfs
        line: install hfs /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Mounting of hfsplus
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_hfsplus_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Mounting of hfsplus
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at
  become: true
  tags:
    - CCE-80141-5
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_hfsplus_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  tasks:
    - name: Ensure kernel module 'hfsplus' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/hfsplus.conf
        regexp: hfsplus
        line: install hfsplus /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Mounting of jffs2
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_jffs2_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Mounting of jffs2
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at
  become: true
  tags:
    - CCE-80139-9
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_jffs2_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  tasks:
    - name: Ensure kernel module 'jffs2' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/jffs2.conf
        regexp: jffs2
        line: install jffs2 /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable RDS Support
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_rds_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable RDS Support
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_rds_disabled
    - low_complexity
    - medium_disruption
    - reboot_required
    - unknown_severity
  tasks:
    - name: Ensure kernel module 'rds' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/rds.conf
        regexp: rds
        line: install rds /bin/true
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable SCTP Support
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_sctp_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable SCTP Support
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82044-9
    - CJIS-5.10.1
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_sctp_disabled
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
  tasks:
    - name: Ensure kernel module 'sctp' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/sctp.conf
        regexp: sctp
        line: install sctp /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Mounting of squashfs
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_squashfs_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Mounting of squashfs
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80142-3
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_squashfs_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  tasks:
    - name: Ensure kernel module 'squashfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/squashfs.conf
        regexp: squashfs
        line: install squashfs /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable TIPC Support
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_tipc_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable TIPC Support
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_tipc_disabled
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
  tasks:
    - name: Ensure kernel module 'tipc' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/tipc.conf
        regexp: tipc
        line: install tipc /bin/true
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Mounting of udf
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_udf_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Mounting of udf
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80143-1
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_udf_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  tasks:
    - name: Ensure kernel module 'udf' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/udf.conf
        regexp: udf
        line: install udf /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Modprobe Loading of USB Storage Driver
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_usb-storage_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Modprobe Loading of USB Storage Driver
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27277-3
    - DISA-STIG-RHEL-07-020100
    - NIST-800-171-3.1.21
    - NIST-800-53-AC-19(a)
    - NIST-800-53-AC-19(d)
    - NIST-800-53-AC-19(e)
    - NIST-800-53-IA-3
    - NIST-800-53-MP-7
    - disable_strategy
    - kernel_module_usb-storage_disabled
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
  tasks:
    - name: Ensure kernel module 'usb-storage' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/usb-storage.conf
        regexp: usb-storage
        line: install usb-storage /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Mounting of vFAT filesystems
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_kernel_module_vfat_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Mounting of FAT filesystems
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82169-4
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - disable_strategy
    - kernel_module_vfat_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  tasks:
    - name: Ensure kernel module 'vfat' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/vfat.conf
        regexp: vfat
        line: install vfat /bin/true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Add noexec Option to &#x2F;dev&#x2F;shm
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_mount_option_dev_shm_noexec,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Add noexec Option to /dev/shm
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80153-0
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_dev_shm_noexec
    - no_reboot_needed
  tasks:
    - name: get back mount information associated to mountpoint
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.command: findmnt --fstab '/dev/shm'

    - name: create mount_info dictionary variable
      with_together:
        - "{{ device_name.stdout_lines[0].split() | list | lower }}"
        - "{{ device_name.stdout_lines[1].split() | list }}"
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        mount_info: "{{ mount_info|default({})|combine({item.0: item.1}) }}"

    - name: Ensure permission noexec are set on /dev/shm
      mount:
        path: /dev/shm
        src: "{{ mount_info.source }}"
        opts: "{{ mount_info.options }},noexec"
        state: mounted
        fstype: "{{ mount_info.fstype }}"
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Add nodev Option to &#x2F;home
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_mount_option_home_nodev,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Add nodev Option to /home
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-81047-3
    - configure_strategy
    - high_disruption
    - low_complexity
    - mount_option_home_nodev
    - no_reboot_needed
    - unknown_severity
  tasks:
    - name: get back mount information associated to mountpoint
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.command: findmnt --fstab '/home'

    - name: create mount_info dictionary variable
      with_together:
        - "{{ device_name.stdout_lines[0].split() | list | lower }}"
        - "{{ device_name.stdout_lines[1].split() | list }}"
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        mount_info: "{{ mount_info|default({})|combine({item.0: item.1}) }}"

    - name: Ensure permission nodev are set on /home
      mount:
        path: /home
        src: "{{ mount_info.source }}"
        opts: "{{ mount_info.options }},nodev"
        state: mounted
        fstype: "{{ mount_info.fstype }}"
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Add nodev Option to &#x2F;tmp
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_mount_option_tmp_nodev,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Add nodev Option to /tmp
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80149-8
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2
    - configure_strategy
    - high_disruption
    - low_complexity
    - mount_option_tmp_nodev
    - no_reboot_needed
    - unknown_severity
  tasks:
    - name: get back mount information associated to mountpoint
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.command: findmnt --fstab '/tmp'

    - name: create mount_info dictionary variable
      with_together:
        - "{{ device_name.stdout_lines[0].split() | list | lower }}"
        - "{{ device_name.stdout_lines[1].split() | list }}"
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        mount_info: "{{ mount_info|default({})|combine({item.0: item.1}) }}"

    - name: Ensure permission nodev are set on /tmp
      mount:
        path: /tmp
        src: "{{ mount_info.source }}"
        opts: "{{ mount_info.options }},nodev"
        state: mounted
        fstype: "{{ mount_info.fstype }}"
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Add noexec Option to &#x2F;tmp
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_mount_option_tmp_noexec,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Add noexec Option to /tmp
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80150-6
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2
    - configure_strategy
    - high_disruption
    - low_complexity
    - mount_option_tmp_noexec
    - no_reboot_needed
    - unknown_severity
  tasks:
    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: "{{ mount_info|default({})|combine({item.0: item.1}) }}"
      with_together:
        - "{{ device_name.stdout_lines[0].split() | list | lower }}"
        - "{{ device_name.stdout_lines[1].split() | list }}"
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Ensure permission noexec are set on /tmp
      mount:
        path: /tmp
        src: "{{ mount_info.source }}"
        opts: "{{ mount_info.options }},noexec"
        state: mounted
        fstype: "{{ mount_info.fstype }}"
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Add nosuid Option to &#x2F;tmp
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_mount_option_tmp_nosuid,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Add nosuid Option to /tmp
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80151-4
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2
    - configure_strategy
    - high_disruption
    - low_complexity
    - mount_option_tmp_nosuid
    - no_reboot_needed
    - unknown_severity
  tasks:
    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: "{{ mount_info|default({})|combine({item.0: item.1}) }}"
      with_together:
        - "{{ device_name.stdout_lines[0].split() | list | lower }}"
        - "{{ device_name.stdout_lines[1].split() | list }}"
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Ensure permission nosuid are set on /tmp
      mount:
        path: /tmp
        src: "{{ mount_info.source }}"
        opts: "{{ mount_info.options }},nosuid"
        state: mounted
        fstype: "{{ mount_info.fstype }}"
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Add nodev Option to &#x2F;var&#x2F;tmp
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_mount_option_var_tmp_nodev,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Add nodev Option to /var/tmp
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-81052-3
    - configure_strategy
    - high_disruption
    - low_complexity
    - mount_option_var_tmp_nodev
    - no_reboot_needed
    - unknown_severity
  tasks:
    - name: get back mount information associated to mountpoint
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.command: findmnt --fstab '/var/tmp'

    - name: create mount_info dictionary variable
      with_together:
        - "{{ device_name.stdout_lines[0].split() | list | lower }}"
        - "{{ device_name.stdout_lines[1].split() | list }}"
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.set_fact:
        mount_info: "{{ mount_info|default({})|combine({item.0: item.1}) }}"

    - name: Ensure permission nodev are set on /var/tmp
      mount:
        path: /var/tmp
        src: "{{ mount_info.source }}"
        opts: "{{ mount_info.options }},nodev"
        state: mounted
        fstype: "{{ mount_info.fstype }}"
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Add noexec Option to &#x2F;var&#x2F;tmp
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_mount_option_var_tmp_noexec,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Add noexec Option to /var/tmp
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82150-4
    - configure_strategy
    - high_disruption
    - low_complexity
    - mount_option_var_tmp_noexec
    - no_reboot_needed
    - unknown_severity
  tasks:
    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: "{{ mount_info|default({})|combine({item.0: item.1}) }}"
      with_together:
        - "{{ device_name.stdout_lines[0].split() | list | lower }}"
        - "{{ device_name.stdout_lines[1].split() | list }}"
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Ensure permission noexec are set on /var/tmp
      mount:
        path: /var/tmp
        src: "{{ mount_info.source }}"
        opts: "{{ mount_info.options }},noexec"
        state: mounted
        fstype: "{{ mount_info.fstype }}"
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Add nosuid Option to &#x2F;var&#x2F;tmp
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_mount_option_var_tmp_nosuid,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Add nosuid Option to /var/tmp
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82153-8
    - configure_strategy
    - high_disruption
    - low_complexity
    - mount_option_var_tmp_nosuid
    - no_reboot_needed
    - unknown_severity
  tasks:
    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
    - name: create mount_info dictionary variable
      set_fact:
        mount_info: "{{ mount_info|default({})|combine({item.0: item.1}) }}"
      with_together:
        - "{{ device_name.stdout_lines[0].split() | list | lower }}"
        - "{{ device_name.stdout_lines[1].split() | list }}"
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
    - name: Ensure permission nosuid are set on /var/tmp
      mount:
        path: /var/tmp
        src: "{{ mount_info.source }}"
        opts: "{{ mount_info.options }},nosuid"
        state: mounted
        fstype: "{{ mount_info.fstype }}"
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Install AIDE
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_package_aide_installed,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Install AIDE
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27096-7
    - CJIS-5.10.1.3
    - NIST-800-53-CM-3(d)
    - NIST-800-53-CM-3(e)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - PCI-DSS-Req-11.5
    - enable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - package_aide_installed
  tasks:
    - name: Ensure aide is installed
      package:
        name: aide
        state: present
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Install firewalld Package
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_package_firewalld_installed,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Install firewalld Package
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-82999-4
    - enable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - package_firewalld_installed
  tasks:
    - name: Ensure firewalld is installed
      package:
        name: firewalld
        state: present
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Verify firewalld Enabled
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_service_firewalld_enabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Verify firewalld Enabled
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80998-8
    - DISA-STIG-RHEL-07-040520
    - NIST-800-171-3.1.3
    - NIST-800-171-3.4.7
    - NIST-800-53-CM-6(b)
    - enable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - service_firewalld_enabled
  tasks:
    - name: Enable service firewalld
      block:
        - name: Gather the package facts
          notify: insights_reboot_handler
          ansible.builtin.package_facts:
            manager: auto

        - name: Enable service firewalld
          service:
            name: firewalld
            enabled: "yes"
            state: started
          when:
            - '"firewalld" in ansible_facts.packages'
          notify: insights_reboot_handler
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Red Hat Network Service (rhnsd)
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_service_rhnsd_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Red Hat Network Service (rhnsd)
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at
  become: true
  tags:
    - CCE-80269-4
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - service_rhnsd_disabled
    - unknown_severity
  tasks:
    - name: Unit Service Exists - rhnsd.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.command: systemctl list-unit-files rhnsd.service

    - name: Disable service rhnsd
      when:
        - '"rhnsd.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.systemd:
        name: rhnsd.service
        enabled: false
        state: stopped
        masked: true

    - name: Unit Socket Exists - rhnsd.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.command: systemctl list-unit-files rhnsd.socket

    - name: Disable socket rhnsd
      systemd:
        name: rhnsd.socket
        enabled: "no"
        state: stopped
        masked: "yes"
      when:
        - '"rhnsd.socket" in socket_file_exists.stdout_lines[1]'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable rpcbind Service
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_service_rpcbind_disabled,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable rpcbind Service
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80230-6
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - service_rpcbind_disabled
    - unknown_severity
  tasks:
    - name: Unit Service Exists - rpcbind.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.command: systemctl list-unit-files rpcbind.service

    - name: Disable service rpcbind
      when:
        - '"rpcbind.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.systemd:
        name: rpcbind.service
        enabled: false
        state: stopped
        masked: true

    - name: Unit Socket Exists - rpcbind.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      notify: insights_reboot_handler
      ansible.builtin.command: systemctl list-unit-files rpcbind.socket

    - name: Disable socket rpcbind
      systemd:
        name: rpcbind.socket
        enabled: "no"
        state: stopped
        masked: "yes"
      when:
        - '"rpcbind.socket" in socket_file_exists.stdout_lines[1]'
        - >-
          ansible_virtualization_role != "guest" or ansible_virtualization_type
          != "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable SSH Root Login
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sshd_disable_root_login,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable SSH Root Login
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27445-6
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-040370
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-AC-3
    - NIST-800-53-AC-6(2)
    - NIST-800-53-IA-2
    - NIST-800-53-IA-2(5)
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_disable_root_login
  tasks:
    - name: Disable SSH Root Login
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          notify: insights_reboot_handler
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitRootLogin no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
          notify: insights_reboot_handler
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Do Not Allow SSH Environment Options
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sshd_do_not_permit_user_env,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Do Not Allow SSH Environment Options
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27363-1
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-010460
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-CM-6(b)
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_do_not_permit_user_env
  tasks:
    - name: Do Not Allow SSH Environment Options
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          notify: insights_reboot_handler
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitUserEnvironment\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitUserEnvironment yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
          notify: insights_reboot_handler
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Enable SSH Warning Banner
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sshd_enable_warning_banner,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Enable SSH Warning Banner
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27314-4
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-040170
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(b)
    - NIST-800-53-AC-8(c)(1)
    - NIST-800-53-AC-8(c)(2)
    - NIST-800-53-AC-8(c)(3)
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_enable_warning_banner
  tasks:
    - name: Enable SSH Warning Banner
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          notify: insights_reboot_handler
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Banner\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: Banner /etc/issue
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
          notify: insights_reboot_handler
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Set SSH Idle Timeout Interval
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sshd_set_idle_timeout,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Set SSH Idle Timeout Interval
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sshd_idle_timeout_value: "300"
  tags:
    - CCE-27433-2
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-040320
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-AC-2(5)
    - NIST-800-53-SA-8(i)
    - NIST-800-53-SC-10
    - PCI-DSS-Req-8.1.8
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_idle_timeout
  tasks:
    - name: Set SSH Idle Timeout Interval
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          notify: insights_reboot_handler
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*ClientAliveInterval\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: ClientAliveInterval {{ sshd_idle_timeout_value }}
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
          notify: insights_reboot_handler
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Set SSH Client Alive Max Count
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sshd_set_keepalive,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Set SSH Client Alive Max Count
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    var_sshd_set_keepalive: "0"
  tags:
    - CCE-27082-7
    - CJIS-5.5.6
    - DISA-STIG-RHEL-07-040340
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-AC-2(5)
    - NIST-800-53-SA-8
    - NIST-800-53-SC-10
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_keepalive
  tasks:
    - name: Set SSH Client Alive Max Count
      block:
        - name: Deduplicate values from /etc/ssh/sshd_config
          notify: insights_reboot_handler
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*ClientAliveCountMax\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
          notify: insights_reboot_handler
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Core Dumps for SUID programs
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_fs_suid_dumpable,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Core Dumps for SUID programs
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-26900-1
    - NIST-800-53-SI-11
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_fs_suid_dumpable
  tasks:
    - name: Ensure sysctl fs.suid_dumpable is set to 0
      sysctl:
        name: fs.suid_dumpable
        value: "0"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Enable Randomized Layout of Virtual Address Space
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_kernel_randomize_va_space,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Enable Randomized Layout of Virtual Address Space
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-27127-0
    - DISA-STIG-RHEL-07-040201
    - NIST-800-171-3.1.7
    - NIST-800-53-SC-30(2)
    - NIST-800-53-SC-39
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_kernel_randomize_va_space
  tasks:
    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: "2"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Accepting ICMP Redirects for All IPv4 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_redirects,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Accepting ICMP Redirects for All IPv4 Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_conf_all_accept_redirects_value: "0"
  tags:
    - CCE-80158-9
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-07-040641
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_accept_redirects
  tasks:
    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: "{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Enable Kernel Parameter to Log Martian Packets on all IPv4 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_log_martians,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Enable Kernel Parameter to Log Martian Packets on all IPv4 Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_conf_all_log_martians_value: "1"
  tags:
    - CCE-80160-5
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-17(7)
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5(3)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv4_conf_all_log_martians
    - unknown_severity
  tasks:
    - name: Ensure sysctl net.ipv4.conf.all.log_martians is set
      sysctl:
        name: net.ipv4.conf.all.log_martians
        value: "{{ sysctl_net_ipv4_conf_all_log_martians_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Kernel Parameter for Accepting Secure ICMP Redirects on all IPv4 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_secure_redirects,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Disable Kernel Parameter for Accepting Secure ICMP Redirects on all IPv4
    Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_conf_all_secure_redirects_value: "0"
  tags:
    - CCE-80159-7
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_secure_redirects
  tasks:
    - name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.all.secure_redirects
        value: "{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_send_redirects,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80156-3
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-07-040660
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5(1)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_send_redirects
  tasks:
    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: "0"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv4 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_accept_redirects,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv4
    Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_conf_default_accept_redirects_value: "0"
  tags:
    - CCE-80163-9
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-07-040640
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_accept_redirects
  tasks:
    - name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: "{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Kernel Parameter for Accepting Source-Routed Packets on IPv4 Interfaces by Default
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_accept_source_route,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Disable Kernel Parameter for Accepting Source-Routed Packets on IPv4
    Interfaces by Default
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_conf_default_accept_source_route_value: "0"
  tags:
    - CCE-80162-1
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-07-040620
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_accept_source_route
  tasks:
    - name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.default.accept_source_route
        value: "{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Enable Kernel Paremeter to Log Martian Packets on all IPv4 Interfaces by Default
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_log_martians,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Enable Kernel Paremeter to Log Martian Packets on all IPv4 Interfaces by
    Default
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_conf_default_log_martians_value: "1"
  tags:
    - CCE-80161-3
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-17(7)
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5(3)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv4_conf_default_log_martians
    - unknown_severity
  tasks:
    - name: Ensure sysctl net.ipv4.conf.default.log_martians is set
      sysctl:
        name: net.ipv4.conf.default.log_martians
        value: "{{ sysctl_net_ipv4_conf_default_log_martians_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces by Default
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_rp_filter,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces
    by Default
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_conf_default_rp_filter_value: "1"
  tags:
    - CCE-80168-8
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_rp_filter
  tasks:
    - name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
      sysctl:
        name: net.ipv4.conf.default.rp_filter
        value: "{{ sysctl_net_ipv4_conf_default_rp_filter_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Configure Kernel Parameter for Accepting Secure Redirects By Default
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_secure_redirects,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Configure Kernel Parameter for Accepting Secure Redirects By Default
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_conf_default_secure_redirects_value: "0"
  tags:
    - CCE-80164-7
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_secure_redirects
  tasks:
    - name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.default.secure_redirects
        value: "{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces by Default
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_send_redirects,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces
    by Default
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80999-6
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-07-040650
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_send_redirects
  tasks:
    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: "0"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Enable Kernel Parameter to Ignore ICMP Broadcast Echo Requests on IPv4 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_echo_ignore_broadcasts,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Enable Kernel Parameter to Ignore ICMP Broadcast Echo Requests on IPv4
    Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: "1"
  tags:
    - CCE-80165-4
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-07-040630
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
  tasks:
    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: "{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Enable Kernel Parameter to Ignore Bogus ICMP Error Responses on IPv4 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_ignore_bogus_error_responses,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Enable Kernel Parameter to Ignore Bogus ICMP Error Responses on IPv4
    Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value: "1"
  tags:
    - CCE-80166-2
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
    - unknown_severity
  tasks:
    - name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
      sysctl:
        name: net.ipv4.icmp_ignore_bogus_error_responses
        value: "{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Kernel Parameter for IP Forwarding on IPv4 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_ip_forward,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Kernel Parameter for IP Forwarding on IPv4 Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  tags:
    - CCE-80157-1
    - DISA-STIG-RHEL-07-040740
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7
    - NIST-800-53-SC-32
    - NIST-800-53-SC-5
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_ip_forward
  tasks:
    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: "0"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Enable Kernel Parameter to Use TCP Syncookies on IPv4 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_tcp_syncookies,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Enable Kernel Parameter to Use TCP Syncookies on IPv4 Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv4_tcp_syncookies_value: "1"
  tags:
    - CCE-27495-1
    - CJIS-5.10.1.1
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-SC-5(1)(2)
    - NIST-800-53-SC-5(2)
    - NIST-800-53-SC-5(3)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_tcp_syncookies
  tasks:
    - name: Ensure sysctl net.ipv4.tcp_syncookies is set
      sysctl:
        name: net.ipv4.tcp_syncookies
        value: "{{ sysctl_net_ipv4_tcp_syncookies_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Configure Accepting Router Advertisements on All IPv6 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_ra,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Configure Accepting Router Advertisements on All IPv6 Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv6_conf_all_accept_ra_value: "0"
  tags:
    - CCE-80180-3
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv6_conf_all_accept_ra
    - unknown_severity
  tasks:
    - name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
      sysctl:
        name: net.ipv6.conf.all.accept_ra
        value: "{{ sysctl_net_ipv6_conf_all_accept_ra_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Accepting ICMP Redirects for All IPv6 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_redirects,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Accepting ICMP Redirects for All IPv6 Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv6_conf_all_accept_redirects_value: "0"
  tags:
    - CCE-80182-9
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_accept_redirects
  tasks:
    - name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.all.accept_redirects
        value: "{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv6 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_source_route,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv6
    Interfaces
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv6_conf_all_accept_source_route_value: "0"
  tags:
    - CCE-80179-5
    - DISA-STIG-RHEL-07-040830
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_accept_source_route
  tasks:
    - name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.all.accept_source_route
        value: "{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Kernel Parameter for IPv6 Forwarding
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_forwarding,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Kernel Parameter for IPv6 Forwarding
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv6_conf_all_forwarding_value: "0"
  tags:
    - CCE-80356-9
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_forwarding
  tasks:
    - name: Ensure sysctl net.ipv6.conf.all.forwarding is set
      sysctl:
        name: net.ipv6.conf.all.forwarding
        value: "{{ sysctl_net_ipv6_conf_all_forwarding_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Accepting Router Advertisements on all IPv6 Interfaces by Default
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_ra,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: Disable Accepting Router Advertisements on all IPv6 Interfaces by Default
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv6_conf_default_accept_ra_value: "0"
  tags:
    - CCE-80181-1
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv6_conf_default_accept_ra
    - unknown_severity
  tasks:
    - name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
      sysctl:
        name: net.ipv6.conf.default.accept_ra
        value: "{{ sysctl_net_ipv6_conf_default_accept_ra_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv6 Interfaces
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_redirects,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv6
    Interfaces
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv6_conf_default_accept_redirects_value: "0"
  tags:
    - CCE-80183-7
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_default_accept_redirects
  tasks:
    - name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.default.accept_redirects
        value: "{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Disable Kernel Parameter for Accepting Source-Routed Packets on IPv6 Interfaces by Default
# Identifier: (ssg:rhel7|content_profile_cis|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_source_route,fix)
# Version: 48db51056597f5613713a8068ac1b4e9bee869d8
- name: >-
    Disable Kernel Parameter for Accepting Source-Routed Packets on IPv6
    Interfaces by Default
  hosts: rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  vars:
    sysctl_net_ipv6_conf_default_accept_source_route_value: "0"
  tags:
    - CCE-80355-1
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_default_accept_source_route
  tasks:
    - name: Ensure sysctl net.ipv6.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.default.accept_source_route
        value: "{{ sysctl_net_ipv6_conf_default_accept_source_route_value }}"
        state: present
        reload: true
      when: >-
        ansible_virtualization_role != "guest" or ansible_virtualization_type !=
        "docker"
      notify: insights_reboot_handler
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true

# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.
# The variable can be overridden to suppress this behavior.
- name: Reboot system (if applicable)
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  gather_facts: false
  tasks:
    - when:
        - insights_needs_reboot is defined
        - insights_needs_reboot
      block:
        - name: Reboot system
          async: 1
          poll: 0
          ignore_errors: true
          ansible.builtin.shell: sleep 2 && shutdown -r now "Ansible triggered reboot"

        - name: Wait for system to boot up
          local_action:
            module: ansible.builtin.wait_for
            host: "{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname,
              true) }}"
            port: "{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}"
            delay: 15
            search_regex: OpenSSH
            timeout: 300
          become: false

- name: run insights
  hosts: rhel-kvegh-nt54-711.kveghdemo.at,rhel-kvegh-nt54-741.kveghdemo.at,rhel-kvegh-nt54-801.kveghdemo.at
  become: true
  gather_facts: false
  tasks:
    - name: run insights
      changed_when: false
      ansible.builtin.command: insights-client
